// 1. Write a C# Sharp program that takes three letters as input and display them in reverse order.

using System;
namespace reverseLogic
{
    class reverseOrder
    {
        static void Main(string[] args)
        {
            char word_1, word_2, word_3;

            Console.Write("Enter letter: ");
            word_1 = Convert.ToChar(Console.ReadLine());

            Console.Write("Enter letter: ");
            word_2 = Convert.ToChar(Console.ReadLine());

            Console.Write("Enter letter: ");
            word_3 = Convert.ToChar(Console.ReadLine());

            Console.WriteLine("\n=====Expected Output=====\n");
            Console.WriteLine("{0} {1} {2}", word_3, word_2, word_1);

            Console.ReadKey();
        }
        
    }
    
}

// 2. Write a C# Sharp program that takes a number and a width also a number, as input and then displays a triangle of that width, using that number.

using System;
namespace Pattern
{
    class trianglePattern
    {
        static void Main(string[] args)
        {
            Console.Write("Enter a number: ");
            int number = Convert.ToInt32(Console.ReadLine());

            Console.Write("Enter the desired width: ");
            int width = Convert.ToInt32(Console.ReadLine());

            int row = number, col = width;

            Console.WriteLine("\n=====Expected Output=====\n");

            for (int i = 1; i <= row; i++)
            {
                for (int k = col; k >= i; k--)
                {
                    Console.Write(col);
                }
                Console.Write("\n");
            }
            Console.ReadKey();
        }
    }
}

// 4. Write a C# Sharp program that takes two numbers as input and perform an operation (+,-,*,x,/) on them and displays the result of that operation.

using System;
namespace Calculator
{
    class Program
    {
        static void Main(string[] args)
        {
            string value;
            do
            {
                int res;
                Console.Write("Enter First Number: ");
                int num1 = Convert.ToInt32(Console.ReadLine());

                Console.Write("Enter Operation (+,-,*,x,/): ");
                string symbol = Console.ReadLine();

                Console.Write("Enter Second Number: ");
                int num2 = Convert.ToInt32(Console.ReadLine());
                switch (symbol)
                {
                    case "+":
                        res = num1 + num2;
                        Console.WriteLine("\n{0} + {1} = {2}", num1, num2, res);
                        break;
                    case "-":
                        res = num1 - num2;
                        Console.WriteLine("\n{0} - {1} = {2}", num1, num2, res);
                        break;
                    case "*":
                        res = num1 * num2;
                        Console.WriteLine("\n{0} * {1} = {2}", num1, num2, res);
                        break;
                    case "x":
                        res = num1 * num2;
                        Console.WriteLine("\n{0} x {1} = {2}", num1, num2, res);
                        break;
                    case "/":
                        res = num1 / num2;
                        Console.WriteLine("\n{0} / {1} = {2}", num1, num2, res);
                        break;
                    default:
                        Console.WriteLine("\nWrong Input");
                        break;
                }
                Console.ReadLine();
                Console.Write("Do You Want To Continue(Press y For Yes and Press n for No)");
                value = Console.ReadLine();
            }
            while (value == "y" || value == "Y");
        }
    }
}

// 5. Write a C# Sharp program that takes the radius of a circle as input and calculate the perimeter and area of the circle.

using System;
namespace perimeterArea
{
    class circlePA
    {
        static void Main(string[] args)
        {
            double radius;
            double PI = 3.14;

            Console.WriteLine("Input the radius of the circle : ");
            radius = Convert.ToDouble(Console.ReadLine());

            Console.WriteLine("\nPerimeter of Circle : " + ((radius * 2) * PI));
            Console.WriteLine("\nArea of Circle : " + ((radius * radius) * PI));
            Console.ReadKey();
        }
    }
}

// 6. Write a C# Sharp program that takes distance and time as input and displays the speed in kilometres per hour and miles per hour.

using System;

namespace Conversion
{
    class Program
    {
        static void Main(string[] args)
        {
            float distance, timesec, kph, mps, mph, hour, sec, min;
            Console.Write("Input distance(metres): ");
            distance = Convert.ToInt32(Console.ReadLine());

            Console.Write("Input timeSec(hour): ");
            hour = Convert.ToInt32(Console.ReadLine());

            Console.Write("Input timeSec(minutes): ");
            min = Convert.ToInt32(Console.ReadLine());

            Console.Write("Input timeSec(seconds): ");
            sec = Convert.ToInt32(Console.ReadLine());

            timesec = (hour * 3600) + (min * 60) + sec;
            mps = distance / timesec;
            kph = (distance / 1000.0f) / (timesec / 3600.0f);
            mph = kph / 1.60934f;

            Console.WriteLine("\nYour speed in metres/sec is {0}", mps);
            Console.WriteLine("\nYour speed in km/h is {0}", kph);
            Console.WriteLine("\nYour speed in miles/h is {0}", mph);
            Console.ReadKey();
        }
    }
}

// 7. Write a C# Sharp program that takes a character as input and check the input (lowercase) is a vowel, a digit, or any other symbol.

using System;

namespace characterLogic
{
    class Program
    {
        static void Main(string[] args)
        {
            char character;

            Console.Write("Input a symbol: ");
            character = Convert.ToChar(Console.ReadLine());

            if ((character == 'a') || (character == 'e') || (character == 'i') || (character == 'o') || (character == 'u'))
                Console.WriteLine("\nIt's a lowercase vowel.");
            else if ((character >= '0') && (character <= '9'))
                Console.WriteLine("\nIt's a digit.");
            else
                Console.Write("\nIt's any other symbol.");
            Console.ReadKey();
        }
    }
}

// 8. Write a C# Sharp program that takes two numbers as input and returns true or false when both numbers are even or odd.

using System;

namespace EvenOdd
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Enter First number: ");
            int a = Convert.ToInt32(Console.ReadLine());

            Console.Write("\nEnter Second number: ");
            int b = Convert.ToInt32(Console.ReadLine());

            Console.WriteLine("\n====Result=====\n");
            Console.WriteLine(a % 2 == 0 && b % 2 == 0 || a % 2 != 0 && b % 2 != 0);
            Console.ReadKey();
        }
    }
}

// 9. Write a C# Sharp program that takes a decimal number as input and displays its equivalent in binary form.

using System;

namespace Conversion
{
    class Program
    {
        static void Main(string[] args)
        {
            int n, i;
            int[] a = new int[10];
            Console.Write("Enter the decimal number to convert: ");
            n = Convert.ToInt32(Console.ReadLine());
            for (i = 0; n > 0; i++)
            {
                a[i] = n % 2;
                n = n / 2;
            }
            Console.Write("\nBinary of the given number = ");
            for (i = i - 1; i >= 0; i--)
            {
                Console.Write(a[i]);
            }
            Console.ReadKey();
        }
        
    }
}

// 10. Write a C# Sharp program to get the absolute difference between n and 51. If n is greater than 51 return triple the absolute difference.

using System;

namespace AbsoluteDiff
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter a number: \n");
            int n1 = int.Parse(Console.ReadLine());
            int n2 = int.Parse(Console.ReadLine());
            int n3 = int.Parse(Console.ReadLine());

            Console.WriteLine("\n=====Expected Result=====\n");

            Console.WriteLine(AbsDif(n1));
            Console.WriteLine(AbsDif(n2));
            Console.WriteLine(AbsDif(n3));
            Console.ReadKey();
        }
        public static int AbsDif(int n)
        {
            if (n > 51)
            {
                return (Math.Abs((n - 51) * 3));
            }
            return (Math.Abs(n - 51));
        }
    }
}

// 11. Write a C# Sharp program to remove the character in a given position of a given string. The given position will be in the range 0.. string length -1 inclusive.

using System;

namespace removePosition
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter your string: \n");
            string str = Console.ReadLine();
            Console.WriteLine("\nEnter the position which you want to remove: \n");

            for (int i = 0; i < 3; i++)
            {
                int pos = int.Parse(Console.ReadLine());
                Console.WriteLine(str.Remove(pos, 1));
                Console.WriteLine("\n");
            }
            Console.ReadKey();
        }
    }
}

// 12. Write a C# Sharp program to exchange the first and last characters in a given string and return the new string.

using System;
namespace ExchangeCharacters
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter a string:- \n");
            string letter1 = Console.ReadLine();
            string letter2 = Console.ReadLine();
            string letter3 = Console.ReadLine();

            Console.WriteLine("\n======New String Result======\n");

            Console.WriteLine(ExcChar(letter1));
            Console.WriteLine(ExcChar(letter2));
            Console.WriteLine(ExcChar(letter3));
            Console.ReadLine();
        }

        public static string ExcChar(string str)
        {
            return str.Length > 1
                ? str.Substring(str.Length - 1) + str.Substring(1, str.Length - 2) + str.Substring(0, 1) : str;
        }
    }
}

// 13. Write a C# Sharp program to create a new array from two give array of integers, each length 3
using System;

namespace ArrayOperations
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("enter elements of 1'st array:- ");
            int[] arr1 = new int[3];
            for (int i = 0; i < 3; i++)
            {
                arr1[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("\n");

            Console.WriteLine("enter elements of 2'nd array:- ");
            int[] arr2 = new int[3];
            for (int i = 0; i < 3; i++)
            {
                arr2[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("\n");

            int[] newArray = ComArr(arr1, arr2);

            Console.Write("====new array====\n");
            foreach (var i in newArray)
            {
                Console.Write(i.ToString() + " ");
            }
            Console.ReadKey();
        }

        public static int[] ComArr(int [] nums1, int [] nums2)
        {
            return new int[] { nums1[0], nums1[1], nums1[2], nums2[0], nums2[1], nums2[2] };
        }
    }
}

// 14. Write a C# Sharp program to count the number of strings with given length in given array of strings

using System;

namespace stringsArray
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Number of Strings: \n");
            string[] answer = new string[5];
            for (int i = 0; i < 5; i++)
            {
                answer[i] = Console.ReadLine();
            }

            Console.WriteLine("\nenter length: \n");
            int length = int.Parse(Console.ReadLine());

            Console.WriteLine("\n===Number of Strings====\n");
            Console.WriteLine(countStr(answer, length));
        }
        static int countStr(string[] arr_str, int len)
        {
            int ctr = 0;

            for (int i = 0; i < arr_str.Length; i++)
            {
                if (arr_str[i].Length == len)
                {
                    ctr++;
                } 
            }
            return ctr;
        }
    }
}

// 15. Write a C# Sharp program to calculate the value that results from raising 3 to a power ranging from 0 to 32

using System;

namespace PowerRanging
{
    class PowerOperation
    {
        static void Main(string[] args)
        {
            int digit = 3;
            for (int power = 0; power <= 32; power++)
            {
                Console.WriteLine($"{digit}^{power} = {(long)Math.Pow(digit, power):N0} (0x{(long)Math.Pow(digit, power):X})");
            }
            Console.ReadKey();
        }
    }
}

// 16. Write a C# Sharp program to convert a given integer value to Roman numerals

using System;
using System.Text;
namespace RomanNumerals
{
    class RomanInt
    {
        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter Integer Value 1:- \n");
            n = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Original integer value: " + n);
            Console.WriteLine("Roman numerals of the said integer value:");
            Console.WriteLine(int_to_Roman(n));

            Console.WriteLine("\nEnter Integer Value 2:- ");
            n = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Original integer value: " + n);
            Console.WriteLine("Roman numerals of the said integer value:");
            Console.WriteLine(int_to_Roman(n));

            Console.WriteLine("\nEnter Integer Value 3:- ");
            n = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Original integer value: " + n);
            Console.WriteLine("Roman numerals of the said integer value:");
            Console.WriteLine(int_to_Roman(n));

            Console.WriteLine("\nEnter Integer Value 4:- ");
            n = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Original integer value: " + n);
            Console.WriteLine("Roman numerals of the said integer value:");
            Console.WriteLine(int_to_Roman(n));
            Console.ReadKey();
        }

        public static string int_to_Roman(int n)
        {
            string[] roman_symbol = { "MMM", "MM", "M", "CM", "DCCC", "DCC", "DC", "D", "CD", "CCC", "CC", "C", "XC", "LXXX", "LXX", "LX", "L", "XL", "XXX", "XX", "X", "IX", "VIII", "VII", "VI", "V", "IV", "III", "II", "I" };
            int[] int_value = { 3000, 2000, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };

            var roman_numerals = new StringBuilder();
            var index_num = 0;
            while (n != 0)
            {
                if (n >= int_value[index_num])
                {
                    n -= int_value[index_num];
                    roman_numerals.Append(roman_symbol[index_num]);
                }
                else
                {
                    index_num++;
                }
            }

            return roman_numerals.ToString();
        }
    }
}

// 17. Write a program in C# Sharp to find the sum of first n natural numbers using recursion

using System;

namespace RecursionSum
{
    class naturalNumbers
    {
        static void Main(string[] args)
        {
            Console.Write(" How many numbers to sum : ");
            int n = Convert.ToInt32(Console.ReadLine());
            Console.Write("\n The sum of first {0} natural numbers is : {1}\n\n", n, recurSum(n));
            Console.ReadKey();
        }

        public static int recurSum(int n)
        {
            if (n <= 1)
            {
                return n;
            }
            return n + recurSum(n - 1);
        }
    }
}

// 18. Write a program in C# Sharp to display the individual digits of a given number using recursion

using System;
class RecursionDigits
{
    static void Main()
    {

        Console.Write("\n\n Display the individual digits of a given number :\n");
        Console.Write("==============================================================\n");
        Console.Write(" Input any number : ");
        int num = Convert.ToInt32(Console.ReadLine());

        Console.Write(" The digits in the number {0} are : ", num);
        digiRecursion(num);
        Console.Write("\n\n");
        Console.ReadKey();
    }

    static void digiRecursion(int number)
    {
        if (number == 0)
        {
            return;
        }
        else
        {
            digiRecursion(number / 10);
            Console.Write(" {0} ", number % 10);
        }
    }
}

// 19. Write a program in C# Sharp to find the number of an array and the square of each number using LINQ.

using System;
using System.Linq;
using System.Collections.Generic;

namespace SquareClass
{
    class findSquare
    {
        static void Main(string[] args)
        {
            Console.WriteLine("enter numbers which has greater square than 20:- \n");
            int[] array1 = new int[4];
            for (int i = 0; i < 4; i++)
            {
                array1[i] = Convert.ToInt32(Console.ReadLine());
            }
            Console.WriteLine("\n");

            Console.Write(" Number of an array and the square of each number using LINQ : ");
            Console.Write("\n====================================================================\n");

            var sqNo = from int Number in array1
                       let SqrNo = Number * Number
                       where SqrNo > 20
                       select new { Number, SqrNo };

            foreach (var a in sqNo)
                Console.WriteLine(a);

            Console.ReadKey();
        }
    }
}

// 20. Write a program in C# Sharp to display the characters and frequency of character from giving string using LINQ.

using System;
using System.Linq;
using System.Collections.Generic;

namespace StringLinq
{
    class CountCharacter
    {
        static void Main(string[] args)
        {
            Console.Write("\nDisplay the characters and frequency of character from giving string : ");
            Console.Write("\n<===========================================================================>\n");
            Console.Write("Enter the string : ");
            string strChar = Console.ReadLine();
            Console.Write("\n");

            var freQuency = from x in strChar
                       group x by x into y
                       select y;

            Console.Write("The frequency of the characters are :\n\n");
            foreach (var TotChar in freQuency)
            {
                Console.WriteLine("Character " + TotChar.Key + ": " + TotChar.Count() + " times");
            }
            Console.ReadKey();
        }
    }
}

// 21. Write a program in C# Sharp to find the string which starts and ends with a specific character using LINQ

using System;
using System.Linq;
using System.Collections.Generic;

namespace CityLinq
{
    class cityByChar
    {
        static void Main(string[] args)
        {
            string StartChar, EndChar;
            char ch;
            string[] cities =
            {
                "ROME","LONDON","NAIROBI","CALIFORNIA","ZURICH","NEW DELHI","AMSTERDAM","ABU DHABI", "PARIS"
            };

            Console.Write("\nFind the string which starts and ends with a specific character : ");
            Console.Write("\n=======================================================================\n");
            Console.Write("\nThe cities are : 'ROME','LONDON','NAIROBI','CALIFORNIA','ZURICH','NEW DELHI','AMSTERDAM','ABU DHABI','PARIS' \n");

            Console.Write("\nInput starting character for the string : ");
            ch = Console.ReadLine()[0];
            StartChar = ch.ToString();
            Console.Write("\nInput ending character for the string : ");
            ch = Console.ReadLine()[0];
            EndChar = ch.ToString();

            var result = from x in cities
                          where x.StartsWith(StartChar)
                          where x.EndsWith(EndChar)
                          select x;
            Console.Write("\n\n");

            foreach (var city in result)
            {
                Console.Write("The city starting with {0} and ending with {1} is : {2} \n", StartChar, EndChar, city);
            }
            Console.ReadKey();
        }
    }
}

// 22. Write a program in C# Sharp to display the top n-th records using LINQ.

using System;
using System.Linq;
using System.Collections.Generic;

namespace RecordsLinq
{
    class DisplayRecords
    {
        static void Main(string[] args)
        {
            List<int> members = new List<int>();
            members.Add(5);
            members.Add(7);
            members.Add(13);
            members.Add(24);
            members.Add(6);
            members.Add(9);
            members.Add(8);
            members.Add(7);

            Console.Write("\nDisplay top nth  records from the list : ");
            Console.Write("\n=============================================\n");

            Console.WriteLine("\nThe members of the list are : ");
            foreach (var numberlist in members)
            {
                Console.WriteLine(numberlist + " ");
            }

            Console.Write("\nHow many records you want to display ? : ");
            int n = Convert.ToInt32(Console.ReadLine());

            var max = (from t in members orderby t descending select t).Take(3);

            Console.Write("\nThe top {0} records from the list are : \n", n);
            foreach (int nth_top in max)
            {
                Console.WriteLine(nth_top);
            }
            Console.ReadKey();
        }
    }
}
